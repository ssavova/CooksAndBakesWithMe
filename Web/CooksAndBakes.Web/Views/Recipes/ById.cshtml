@model CooksAndBakes.Web.ViewModels.Recipes.FullRecipeViewModel

@{
    this.ViewData["Title"] = Model.Title;
    var count = 0;

    void DisplayComments()
    {
        if (!Model.Comments.Any())
        {
            return;
        }

        foreach (var comment in Model.Comments)
        {
            <div class="container-fluid mt-100">
                <div class="row">
                    <div class="col-md-12">
                        <div class="card mb-4">
                            <div class="card-header">
                                <div class="media flex-wrap w-100 align-items-center">
                                    <img src="https://res.cloudinary.com/dyk67xps4/image/upload/v1589885509/avatar_jrvm43.png" class="d-block ui-w-40 rounded-circle" alt="">
                                    <div class="media-body ml-3">
                                        @comment.AuthorComments;
                                        <div class="text-muted small">
                                            <time datetime="@comment.CreatedOn.ToString("D")"></time>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card-body">
                                <article>
                                    @Html.Raw(comment.Content)
                                </article>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
}

<div class="">
    <div class="container">
        <div class="row">
            <div class="col-xl-12">
                <div class="text-center mt-3 mb-3">
                    <h2 class="font-weight-bold">@Model.Title</h2>
                    <img src="~/images/recipe-author.png" /> @Model.Username
                    <i class="fa fa-calendar"></i> @Model.CreatedOn.ToString("D")
                </div>
            </div>
        </div>
    </div>
</div>


<div class="recepie_details_area">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-xl-6 col-md-6">
                <div id="carouselExampleIndicators" class="carousel slide mb-2" data-ride="carousel">
                    <ol class="carousel-indicators">
                        @for (int i = 0; i < Model.ImageUrls.Count; i++)
                        {
                            @if (i == 0)
                            {
                                <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
                            }
                            else
                            {
                                <li data-target="#carouselExampleIndicators" data-slide-to="@i"></li>
                            }
                        }
                    </ol>
                    <div class="carousel-inner">
                        @foreach (var imageUrl in Model.ImageUrls)
                        {
                            @if (count == 0)
                            {
                                <div class="carousel-item active">
                                    <img class="d-block w-100" src="@imageUrl" alt="">
                                </div>
                            }
                            else
                            {
                                <div class="carousel-item">
                                    <img class="d-block w-100" src="@imageUrl" alt="">
                                </div>
                            }

                            count++;
                        }
                    </div>
                    <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>

                <div class="resepies_details mb-3 mt-3">
                    <ul>
                        <li>
                            <p id="complexity">
                                <strong>Complexity</strong> :
                                <img src="~/images/chef.png" id="h1" />
                                <img src="~/images/chef.png" id="h2" />
                                <img src="~/images/chef.png" id="h3" />
                                <img src="~/images/chef.png" id="h4" />
                                <img src="~/images/chef.png" id="h5" />
                            </p>
                        </li>
                        <li><p><strong>Category</strong> : @Model.CategoryName </p></li>
                    </ul>
                </div>
                @*End of example*@
                @*<div>
                        <img alt="" src="https://res.cloudinary.com/dyk67xps4/image/upload/v1588964500/Starters_k66o6v.jpg" class="img-thumbnail">
                    </div>*@
            </div>
            <div class="col-xl-6 col-md-6 container-fluid" id="ingredients-page">
                <h3 class="text-center">Ingredients</h3>
                <article>
                    @Html.Raw(Model.Products)
                </article>
            </div>
        </div>
        <div class="row">
            <div class="col-xl-11">
                <div class="recepies_text mb-3">
                    <h3>Directions</h3>
                    <article>
                        @Html.Raw(Model.Description)
                    </article>
                </div>
            </div>
        </div>
    </div>
</div>

@if (Model.Username == Model.CurrentlyLoggeduser)
{
    <div>
        <a href="/Recipes/Edit?recipeId=@Model.RecipeId" id="customize-edit-recipe">
            Edit <i class="fa fa-pencil-alt"></i>
        </a>
    </div>
}

@*Vote*@

<div id="vote-content" class="container text-center">
    <p class="style-question">Do you like this recipe ? </p>
    <form id="votesForm" method="post"></form>
    <div class="row outter">
        <div>
            <a href="#" onclick="sendVote('@Model.RecipeId', true)">
                <i class="fa fa-thumbs-up fa-3x mr-3"></i>
            </a>
        </div>
        <div id="votesCount" class="ml-3 mr-3 font-weight-bold">@Model.VotesCount</div>
        <div>
            <a href="#" onclick="sendVote('@Model.RecipeId', false)">
                <i class="fa fa-thumbs-down fa-3x ml-3"></i>
            </a>
        </div>
    </div>
</div>

@{ DisplayComments(); }


<div class="text-muted small ml-3">
    @if (this.User.Identity.IsAuthenticated)
    {
        <div class="px-4 pt-3 mb-4">
            <button type="button" class="btn btn-primary" onclick="showAddCommentForm()">
                <i class="fa fa-comment"></i>&nbsp; Add Comment
            </button>
        </div>
    }
</div>

@*Comments*@
<script src="/lib/tinymce/tinymce.min.js" type="text/javascript"></script>
<script type="text/javascript">
    tinymce.init({
        selector: "textarea",
        plugins: ["image paste table link code media"]
    });
</script>
<div>
    <form asp-controller="Comments" asp-action="Create" method="post" id="AddCommentForm" style="display: none">
        <input type="hidden" name="RecipeId" value="@this.Model.RecipeId" />
        <div>
            <label for="Content"></label>
            <textarea name="Content" id="Content" class="form-control"></textarea>
        </div>
        <div class="ml-1 mt-2">
            <input type="submit" class="btn btn-primary" value="I Am Done!" />
        </div>
    </form>
</div>


@section Scripts{
    <script>

    (function(){
    if (@Model.Level == 1) {
    $("#h1").addClass("level");
    } else if (@Model.Level == 2) {
    $("#h1").addClass("level");
    $("#h2").addClass("level");
    } else if (@Model.Level == 3) {
    $("#h1").addClass("level");
    $("#h2").addClass("level");
    $("#h3").addClass("level");
    } else if (@Model.Level == 4) {
    $("#h1").addClass("level");
    $("#h2").addClass("level");
    $("#h3").addClass("level");
    $("#h4").addClass("level");
    } else if (@Model.Level == 5) {
    $("#h1").addClass("level");
    $("#h2").addClass("level");
    $("#h3").addClass("level");
    $("#h4").addClass("level");
    $("#h5").addClass("level");
    }
        })();

        function sendVote(recipeId, isUpVote) {
            var token = $("#votesForm input[name=__RequestVerificationToken]").val();
            var json = { recipeId: recipeId, isUpVote: isUpVote };
            $.ajax({
                url: "/api/votes",
                type: "POST",
                data: JSON.stringify(json),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                headers: { 'X-CSRF-TOKEN': token },
                success: function (data) {
                    $("#votesCount").html(data.votesCount);
                }
            });
        };

        $('#vote-content').on('click', function (event) {
            event.preventDefault()
        });

        function showAddCommentForm() {
            $("#AddCommentForm").toggle();
            $([document.documentElement, document.body]).animate({
                scrollTop: $("#AddCommentForm").offset().top
            }, 1000);
        }

    </script>
}

